define({ "api": [
  {
    "type": "post",
    "url": "/issues",
    "title": "Create an issue",
    "name": "CreateIssue",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Registers a new issue.</p>",
    "success": {
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>A unique identifier for the issue generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the creator who createdd the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "createdAt",
            "description": "<p>The date at which the issue was registered</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: http://localhost:3000/issues/5ab37dce54a38c18641c878c\n\n{\n    \"tags\": [\n        \"broken\",\n        \"lampe\"\n    ],\n    \"createdAt\": \"2018-03-22T09:56:30.277Z\",\n    \"updatedAt\": \"2018-03-22T09:56:30.278Z\",\n    \"title\": \"Lampe problème\",\n    \"description\": \"Une lampe cassée hier soir au carrefour du Mont.\",\n    \"imageUrl\": \"C/:myimages/lampe\",\n    \"latitude\": 34.90437,\n    \"longitude\": 25.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\",\n   \"id\": \"5ab37dce54a38c18641c878c\"\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "  POST /issues HTTP/1.1\n  Content-Type: application/json\n\n* {\n    \"tags\": [\n        \"broken\",\n        \"lampe\"\n    ],\n    \"title\": \"Lampe problème\",\n    \"description\": \"Une lampe cassée hier soir au carrefour du Mont.\",\n    \"imageUrl\": \"C/:myimages/lampe\",\n    \"latitude\": 34.90437,\n    \"longitude\": 25.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\"\n  }",
        "type": "json"
      }
    ],
    "filename": "routes/issues.js",
    "groupTitle": "Issue",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the user who created the issue.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the issue's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Issue validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"title is too short\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/users/:id",
    "title": "Delete an issue",
    "name": "DeleteIssue",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Permanently deletes an issue.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /issues/5ab37dce54a38c18641c878c HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/issues.js",
    "groupTitle": "Issue",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No issue was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo issue found with ID 5ab36818a77ed101f8269cd4",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "patch",
    "url": "/users/:id",
    "title": "Partially update an issue",
    "name": "PartiallyUpdateIssue",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Partially updates an issue's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /api/movies/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n    \"latitude\": 38.90437,\n    \"longitude\": 27.92827\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"tags\": [\n        \"broken\",\n        \"lampe\"\n    ],\n    \"createdAt\": \"2018-03-22T09:56:30.277Z\",\n    \"updatedAt\": \"2018-03-22T09:56:30.278Z\",\n    \"title\": \"Lampe problème\",\n    \"description\": \"Une lampe cassée hier soir au carrefour du Mont.\",\n    \"imageUrl\": \"C/:myimages/lampe\",\n    \"latitude\": 38.90437,\n    \"longitude\": 27.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\",\n   \"id\": \"5ab37dce54a38c18641c878c\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the creator who createdd the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "createdAt",
            "description": "<p>The date at which the issue was registered</p>"
          }
        ]
      }
    },
    "filename": "routes/issues.js",
    "groupTitle": "Issue",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the user who created the issue.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No issue was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the issue's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo issue found with ID 5ab36818a77ed101f8269cd4",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Issue validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"title is too short\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/issues/:id",
    "title": "Retrieve an issue",
    "name": "RetrieveIssue",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Retrieves one Issue.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /issues/5ab36818a77ed101f8269cd4 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"tags\": [\n        \"broken\",\n        \"lampe\"\n    ],\n    \"createdAt\": \"2018-03-22T09:56:30.277Z\",\n    \"updatedAt\": \"2018-03-22T09:56:30.278Z\",\n    \"title\": \"Lampe problème\",\n    \"description\": \"Une lampe cassée hier soir au carrefour du Mont.\",\n    \"imageUrl\": \"C/:myimages/lampe\",\n    \"latitude\": 34.90437,\n    \"longitude\": 25.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\",\n   \"id\": \"5ab37dce54a38c18641c878c\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the creator who createdd the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "createdAt",
            "description": "<p>The date at which the issue was registered</p>"
          }
        ]
      }
    },
    "filename": "routes/issues.js",
    "groupTitle": "Issue",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue to retrieve</p>"
          }
        ],
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "include",
            "description": "<p>Embed linked resources in the response body:</p> <ul> <li><code>&quot;creator&quot;</code> for the issue's creator</li> </ul>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No issue was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo issue found with ID 5ab36818a77ed101f8269cd4",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/issues",
    "title": "List issues",
    "name": "RetrieveIssues",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of issues ordered by title (in alphabetical order).</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "creator",
            "description": "<p>Select only issues created by the person with the specified ID (this parameter can be given multiple times)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "include",
            "description": "<p>Embed linked resources in the response body:</p> <ul> <li><code>&quot;creator&quot;</code> for the issue's creator</li> </ul>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..",
            "optional": true,
            "field": "page",
            "description": "<p>The page to retrieve (defaults to 1)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..100",
            "optional": true,
            "field": "pageSize",
            "description": "<p>The number of elements to retrieve in one page (defaults to 100)</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /issues?creator=5a97b8d391930a14ec52d996 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;http://http://localhost:3000/issues?creator=5a968469babc74186ca57389",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the creator who createdd the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "createdAt",
            "description": "<p>The date at which the issue was registered</p>"
          }
        ],
        "Response headers": [
          {
            "group": "Response headers",
            "type": "String",
            "optional": false,
            "field": "Link",
            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable)</p>"
          }
        ]
      }
    },
    "filename": "routes/issues.js",
    "groupTitle": "Issue"
  },
  {
    "type": "patch",
    "url": "/users/:id",
    "title": "update an issue",
    "name": "UpdateIssue",
    "group": "Issue",
    "version": "1.0.0",
    "description": "<p>Updates all the data issue.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /api/movies/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n    \"tags\": [\n        \"caput\",\n        \"miroir\"\n    ],\n    \"title\": \"miroir cassé\",\n    \"description\": \"Un miroir cassé dans la rue.\",\n    \"imageUrl\": \"C/:myimages/miroir\",\n    \"latitude\": 48.90437,\n    \"longitude\": 67.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"tags\": [\n        \"caput\",\n        \"miroir\"\n    ],\n    \"createdAt\": \"2018-03-22T09:56:30.277Z\",\n    \"updatedAt\": \"2018-03-22T09:56:30.278Z\",\n    \"title\": \"miroir cassé\",\n    \"description\": \"Un miroir cassé dans la rue.\",\n    \"imageUrl\": \"C/:myimages/miroir\",\n    \"latitude\": 48.90437,\n    \"longitude\": 67.92827,\n    \"creatorHref\": \"/users/5a968469babc74186ca57389\",\n    \"id\": \"5ab37dce54a38c18641c878c\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the creator who createdd the issue</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "createdAt",
            "description": "<p>The date at which the issue was registered</p>"
          }
        ]
      }
    },
    "filename": "routes/issues.js",
    "groupTitle": "Issue",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the issue to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "creatorHref",
            "description": "<p>A hyperlink reference to the user who created the issue.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No issue was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the issue's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo issue found with ID 5ab36818a77ed101f8269cd4",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Issue validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"title is too short\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/users",
    "title": "Create a usern",
    "name": "CreateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Registers a new user.</p>",
    "success": {
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "lastname",
            "description": "<p>The name of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "firstname",
            "description": "<p>The firstname of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "honorific",
            "description": "<p>The honorific of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "age",
            "description": "<p>The age of the user not the age of his dog, be cairefoule!!! -&gt; made by OSS117jokemaker</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "road",
            "description": "<p>The address road of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "city",
            "description": "<p>The adrees city of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "number",
            "description": "<p>The address number of the user</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/people/58b2926f5e1def0123e97bc0\n\n {\n   \"address\": {\n       \"road\": \"Rue du Vent\",\n       \"number\": 34,\n       \"city\": \"Lausanne\"\n    },\n   \"lastname\": \"Doe\",\n   \"firstname\": \"John\",\n   \"honorific\": \"Mr\",\n   \"age\": 23,\n   \"id\": \"5a968469babc74186ca57389\"\n }",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "POST /users HTTP/1.1\nContent-Type: application/json\n\n{\n   \"address\": {\n       \"road\": \"Rue du Vent\",\n       \"number\": 34,\n       \"city\": \"Lausanne\"\n    },\n   \"lastname\": \"Doe\",\n   \"firstname\": \"John\",\n   \"honorific\": \"Mr\",\n   \"age\": 23\n }",
        "type": "json"
      }
    ],
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "allowedValues": [
              "\"Mr\"",
              "\"Ms\"",
              "\"Mrs\"",
              "\"DR\""
            ],
            "optional": false,
            "field": "honorific",
            "description": "<p>The title of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"errors\": {\n    \"honorific\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `honorific`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"honorific\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Ms\",\n          \"Mr\",\n             \"Ms\",\n             \"Dr\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"honorific\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/users/:id",
    "title": "Delete a user",
    "name": "DeleteUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /users/5a968469babc74186ca57389 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1daccqaqcef0123e97bc0",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "patch",
    "url": "/users/:id",
    "title": "Partially update a user",
    "name": "PartiallyUpdateuser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Partially updates a user's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /users/5a968469babc74186ca57389 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"lastname\": \"Merx\",\n  \"firstname\": \"Eddie\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;http://localhost:3000/users/5a968469babc74186ca57389\n\n {\n   \"address\": {\n       \"road\": \"Rue du Vent\",\n       \"number\": 34,\n       \"city\": \"Lausanne\"\n    },\n   \"lastname\": \"Merx\",\n   \"firstname\": \"Eddie\",\n   \"honorific\": \"Mr\",\n   \"age\": 23,\n   \"id\": \"5a968469babc74186ca57389\"\n }",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "lastname",
            "description": "<p>The name of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "firstname",
            "description": "<p>The firstname of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "honorific",
            "description": "<p>The honorific of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "age",
            "description": "<p>The age of the user not the age of his dog, be cairefoule!!! -&gt; made by OSS117jokemaker</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "road",
            "description": "<p>The address road of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "city",
            "description": "<p>The adrees city of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "number",
            "description": "<p>The address number of the user</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "allowedValues": [
              "\"Mr\"",
              "\"Ms\"",
              "\"Mrs\"",
              "\"DR\""
            ],
            "optional": false,
            "field": "honorific",
            "description": "<p>The title of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1daccqaqcef0123e97bc0",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"errors\": {\n    \"honorific\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `honorific`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"honorific\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Ms\",\n          \"Mr\",\n             \"Ms\",\n             \"Dr\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"honorific\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/users",
    "title": "List users",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of user sorted by name (in alphabetical order).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /users HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;http://localhost:3000/users\n\n[\n {\n   \"address\": {\n       \"road\": \"Rue du Vent\",\n       \"number\": 34,\n       \"city\": \"Lausanne\"\n    },\n   \"lastname\": \"Doe\",\n   \"firstname\": \"John\",\n   \"honorific\": \"Mr\",\n   \"age\": 23,\n   \"id\": \"5a968469babc74186ca57389\"\n }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "lastname",
            "description": "<p>The name of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "firstname",
            "description": "<p>The firstname of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "honorific",
            "description": "<p>The honorific of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "age",
            "description": "<p>The age of the user not the age of his dog, be cairefoule!!! -&gt; made by OSS117jokemaker</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "road",
            "description": "<p>The address road of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "city",
            "description": "<p>The adrees city of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "number",
            "description": "<p>The address number of the user</p>"
          }
        ],
        "Response headers": [
          {
            "group": "Response headers",
            "type": "String",
            "optional": false,
            "field": "Link",
            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable)</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..",
            "optional": true,
            "field": "page",
            "description": "<p>The page to retrieve (defaults to 1)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..100",
            "optional": true,
            "field": "pageSize",
            "description": "<p>The number of elements to retrieve in one page (defaults to 100)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/users/:id",
    "title": "Retrieve a user",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves one user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /users/5a968469babc74186ca57389 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;http://localhost:3000/users/5a968469babc74186ca57389\n\n {\n   \"address\": {\n       \"road\": \"Rue du Vent\",\n       \"number\": 34,\n       \"city\": \"Lausanne\"\n    },\n   \"lastname\": \"Doe\",\n   \"firstname\": \"John\",\n   \"honorific\": \"Mr\",\n   \"age\": 23,\n   \"id\": \"5a968469babc74186ca57389\"\n }",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "lastname",
            "description": "<p>The name of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "firstname",
            "description": "<p>The firstname of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "honorific",
            "description": "<p>The honorific of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "age",
            "description": "<p>The age of the user not the age of his dog, be cairefoule!!! -&gt; made by OSS117jokemaker</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "road",
            "description": "<p>The address road of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "city",
            "description": "<p>The adrees city of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "number",
            "description": "<p>The address number of the user</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1daccqaqcef0123e97bc0",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "put",
    "url": "/usres/:id",
    "title": "Update a user",
    "name": "UpdateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Replaces all the user's data (the request body must represent a full, valid user).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PUT /users/5a968469babc74186ca57389 HTTP/1.1\nContent-Type: application/json\n\n {\n   \"address\": {\n       \"road\": \"Ch. du Levant\",\n       \"number\": 4,\n       \"city\": \"Aigle\"\n    },\n   \"lastname\": \"Merxou\",\n   \"firstname\": \"Edditte\",\n   \"honorific\": \"Ms\",\n   \"age\": 65\n }",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n {\n   \"address\": {\n       \"road\": \"Ch. du Levant\",\n       \"number\": 4,\n       \"city\": \"Aigle\"\n    },\n   \"lastname\": \"Merxou\",\n   \"firstname\": \"Edditte\",\n   \"honorific\": \"Ms\",\n   \"age\": 65,\n   \"id\": \"5a968469babc74186ca57389\"\n }",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "lastname",
            "description": "<p>The name of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "firstname",
            "description": "<p>The firstname of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "honorific",
            "description": "<p>The honorific of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "age",
            "description": "<p>The age of the user not the age of his dog, be cairefoule!!! -&gt; made by OSS117jokemaker</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "road",
            "description": "<p>The address road of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "city",
            "description": "<p>The adrees city of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "number",
            "description": "<p>The address number of the user</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "allowedValues": [
              "\"Mr\"",
              "\"Ms\"",
              "\"Mrs\"",
              "\"DR\""
            ],
            "optional": false,
            "field": "honorific",
            "description": "<p>The title of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1daccqaqcef0123e97bc0",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"errors\": {\n    \"honorific\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `honorific`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"honorific\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Ms\",\n          \"Mr\",\n             \"Ms\",\n             \"Dr\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"honorific\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  }
] });
